/*
* generated by Xtext
*/
grammar InternalDsl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package dk.itu.smdp.survey.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package dk.itu.smdp.survey.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import dk.itu.smdp.survey.services.DslGrammarAccess;

}

@parser::members {

 	private DslGrammarAccess grammarAccess;
 	
    public InternalDslParser(TokenStream input, DslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Survey";	
   	}
   	
   	@Override
   	protected DslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleSurvey
entryRuleSurvey returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSurveyRule()); }
	 iv_ruleSurvey=ruleSurvey 
	 { $current=$iv_ruleSurvey.current; } 
	 EOF 
;

// Rule Survey
ruleSurvey returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSurveyAccess().getSurveyAction_0(),
            $current);
    }
)	otherlv_1='<survey' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSurveyAccess().getSurveyKeyword_1());
    }
(	otherlv_2='title' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSurveyAccess().getTitleKeyword_2_0());
    }
	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSurveyAccess().getEqualsSignKeyword_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSurveyAccess().getTitleEStringParserRuleCall_2_2_0()); 
	    }
		lv_title_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSurveyRule());
	        }
       		set(
       			$current, 
       			"title",
        		lv_title_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_5='description' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSurveyAccess().getDescriptionKeyword_3_0());
    }
	otherlv_6='=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSurveyAccess().getEqualsSignKeyword_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSurveyAccess().getDescriptionEStringParserRuleCall_3_2_0()); 
	    }
		lv_description_7_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSurveyRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_7_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_8='>' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getSurveyAccess().getGreaterThanSignKeyword_4());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getSurveyAccess().getItemsItemParserRuleCall_5_0_0()); 
	    }
		lv_items_9_0=ruleItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSurveyRule());
	        }
       		add(
       			$current, 
       			"items",
        		lv_items_9_0, 
        		"Item");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSurveyAccess().getItemsItemParserRuleCall_5_1_0()); 
	    }
		lv_items_10_0=ruleItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSurveyRule());
	        }
       		add(
       			$current, 
       			"items",
        		lv_items_10_0, 
        		"Item");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?((
(
		{ 
	        newCompositeNode(grammarAccess.getSurveyAccess().getTemplatesAnswerTemplateParserRuleCall_6_0_0()); 
	    }
		lv_templates_11_0=ruleAnswerTemplate		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSurveyRule());
	        }
       		add(
       			$current, 
       			"templates",
        		lv_templates_11_0, 
        		"AnswerTemplate");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSurveyAccess().getTemplatesAnswerTemplateParserRuleCall_6_1_0()); 
	    }
		lv_templates_12_0=ruleAnswerTemplate		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSurveyRule());
	        }
       		add(
       			$current, 
       			"templates",
        		lv_templates_12_0, 
        		"AnswerTemplate");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?	otherlv_13='</survey>' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getSurveyAccess().getSurveyKeyword_7());
    }
)
;





// Entry rule entryRuleItem
entryRuleItem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getItemRule()); }
	 iv_ruleItem=ruleItem 
	 { $current=$iv_ruleItem.current; } 
	 EOF 
;

// Rule Item
ruleItem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getItemAccess().getGroupParserRuleCall_0()); 
    }
    this_Group_0=ruleGroup
    { 
        $current = $this_Group_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getItemAccess().getSingleParserRuleCall_1()); 
    }
    this_Single_1=ruleSingle
    { 
        $current = $this_Single_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getItemAccess().getMultipleParserRuleCall_2()); 
    }
    this_Multiple_2=ruleMultiple
    { 
        $current = $this_Multiple_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getItemAccess().getTextParserRuleCall_3()); 
    }
    this_Text_3=ruleText
    { 
        $current = $this_Text_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getItemAccess().getDateParserRuleCall_4()); 
    }
    this_Date_4=ruleDate
    { 
        $current = $this_Date_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getItemAccess().getNumberParserRuleCall_5()); 
    }
    this_Number_5=ruleNumber
    { 
        $current = $this_Number_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getItemAccess().getScaleParserRuleCall_6()); 
    }
    this_Scale_6=ruleScale
    { 
        $current = $this_Scale_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getItemAccess().getTableParserRuleCall_7()); 
    }
    this_Table_7=ruleTable
    { 
        $current = $this_Table_7.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleQuestion
entryRuleQuestion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQuestionRule()); }
	 iv_ruleQuestion=ruleQuestion 
	 { $current=$iv_ruleQuestion.current; } 
	 EOF 
;

// Rule Question
ruleQuestion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQuestionAccess().getSingleParserRuleCall_0()); 
    }
    this_Single_0=ruleSingle
    { 
        $current = $this_Single_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getQuestionAccess().getMultipleParserRuleCall_1()); 
    }
    this_Multiple_1=ruleMultiple
    { 
        $current = $this_Multiple_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getQuestionAccess().getTextParserRuleCall_2()); 
    }
    this_Text_2=ruleText
    { 
        $current = $this_Text_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getQuestionAccess().getDateParserRuleCall_3()); 
    }
    this_Date_3=ruleDate
    { 
        $current = $this_Date_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getQuestionAccess().getNumberParserRuleCall_4()); 
    }
    this_Number_4=ruleNumber
    { 
        $current = $this_Number_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getQuestionAccess().getScaleParserRuleCall_5()); 
    }
    this_Scale_5=ruleScale
    { 
        $current = $this_Scale_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getQuestionAccess().getTableParserRuleCall_6()); 
    }
    this_Table_6=ruleTable
    { 
        $current = $this_Table_6.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleOption
entryRuleOption returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOptionRule()); }
	 iv_ruleOption=ruleOption 
	 { $current=$iv_ruleOption.current; } 
	 EOF 
;

// Rule Option
ruleOption returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getOptionAccess().getOption_ImplParserRuleCall_0()); 
    }
    this_Option_Impl_0=ruleOption_Impl
    { 
        $current = $this_Option_Impl_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOptionAccess().getAnswerParserRuleCall_1()); 
    }
    this_Answer_1=ruleAnswer
    { 
        $current = $this_Answer_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOptionAccess().getAnswerTemplateParserRuleCall_2()); 
    }
    this_AnswerTemplate_2=ruleAnswerTemplate
    { 
        $current = $this_AnswerTemplate_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleEString
entryRuleEString returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEStringRule()); } 
	 iv_ruleEString=ruleEString 
	 { $current=$iv_ruleEString.current.getText(); }  
	 EOF 
;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); 
    }

    |    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleAnswerTemplate
entryRuleAnswerTemplate returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnswerTemplateRule()); }
	 iv_ruleAnswerTemplate=ruleAnswerTemplate 
	 { $current=$iv_ruleAnswerTemplate.current; } 
	 EOF 
;

// Rule AnswerTemplate
ruleAnswerTemplate returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='<template' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAnswerTemplateAccess().getTemplateKeyword_0());
    }
	otherlv_1='id' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAnswerTemplateAccess().getIdKeyword_1());
    }
	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAnswerTemplateAccess().getEqualsSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAnswerTemplateAccess().getIdEStringParserRuleCall_3_0()); 
	    }
		lv_id_3_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnswerTemplateRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_3_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='>' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAnswerTemplateAccess().getGreaterThanSignKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAnswerTemplateAccess().getAnswersAnswerParserRuleCall_5_0()); 
	    }
		lv_answers_5_0=ruleAnswer		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnswerTemplateRule());
	        }
       		add(
       			$current, 
       			"answers",
        		lv_answers_5_0, 
        		"Answer");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAnswerTemplateAccess().getAnswersAnswerParserRuleCall_6_0()); 
	    }
		lv_answers_6_0=ruleAnswer		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnswerTemplateRule());
	        }
       		add(
       			$current, 
       			"answers",
        		lv_answers_6_0, 
        		"Answer");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_7='</template>' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getAnswerTemplateAccess().getTemplateKeyword_7());
    }
)
;





// Entry rule entryRuleAnswer
entryRuleAnswer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnswerRule()); }
	 iv_ruleAnswer=ruleAnswer 
	 { $current=$iv_ruleAnswer.current; } 
	 EOF 
;

// Rule Answer
ruleAnswer returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='<a' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAnswerAccess().getAKeyword_0());
    }
(	otherlv_1='id' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAnswerAccess().getIdKeyword_1_0());
    }
	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAnswerAccess().getEqualsSignKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAnswerAccess().getIdEStringParserRuleCall_1_2_0()); 
	    }
		lv_id_3_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnswerRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_3_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_4='>' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAnswerAccess().getGreaterThanSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAnswerAccess().getLabelEStringParserRuleCall_3_0()); 
	    }
		lv_label_5_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnswerRule());
	        }
       		set(
       			$current, 
       			"label",
        		lv_label_5_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='</a>' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getAnswerAccess().getAKeyword_4());
    }
)
;







// Entry rule entryRuleGroup
entryRuleGroup returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGroupRule()); }
	 iv_ruleGroup=ruleGroup 
	 { $current=$iv_ruleGroup.current; } 
	 EOF 
;

// Rule Group
ruleGroup returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='<group' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getGroupAccess().getGroupKeyword_0());
    }
(	otherlv_1='title' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getGroupAccess().getTitleKeyword_1_0());
    }
	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getGroupAccess().getEqualsSignKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGroupAccess().getTitleEStringParserRuleCall_1_2_0()); 
	    }
		lv_title_3_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGroupRule());
	        }
       		set(
       			$current, 
       			"title",
        		lv_title_3_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_4='description' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getGroupAccess().getDescriptionKeyword_2_0());
    }
	otherlv_5='=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getGroupAccess().getEqualsSignKeyword_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGroupAccess().getDescriptionEStringParserRuleCall_2_2_0()); 
	    }
		lv_description_6_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGroupRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_6_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_7='dependsOn' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getGroupAccess().getDependsOnKeyword_3_0());
    }
	otherlv_8='=' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getGroupAccess().getEqualsSignKeyword_3_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGroupRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getGroupAccess().getDependsOnAnswerCrossReference_3_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		lv_required_10_0=	'required' 
    {
        newLeafNode(lv_required_10_0, grammarAccess.getGroupAccess().getRequiredRequiredKeyword_4_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGroupRule());
	        }
       		setWithLastConsumed($current, "required", true, "required");
	    }

)
)?	otherlv_11='>' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getGroupAccess().getGreaterThanSignKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGroupAccess().getQuestionsQuestionParserRuleCall_6_0()); 
	    }
		lv_questions_12_0=ruleQuestion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGroupRule());
	        }
       		add(
       			$current, 
       			"questions",
        		lv_questions_12_0, 
        		"Question");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getGroupAccess().getQuestionsQuestionParserRuleCall_7_0()); 
	    }
		lv_questions_13_0=ruleQuestion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGroupRule());
	        }
       		add(
       			$current, 
       			"questions",
        		lv_questions_13_0, 
        		"Question");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_14='</group>' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getGroupAccess().getGroupKeyword_8());
    }
)
;





// Entry rule entryRuleSingle
entryRuleSingle returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSingleRule()); }
	 iv_ruleSingle=ruleSingle 
	 { $current=$iv_ruleSingle.current; } 
	 EOF 
;

// Rule Single
ruleSingle returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='<single' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSingleAccess().getSingleKeyword_0());
    }
(	otherlv_1='title' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSingleAccess().getTitleKeyword_1_0());
    }
	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSingleAccess().getEqualsSignKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSingleAccess().getTitleEStringParserRuleCall_1_2_0()); 
	    }
		lv_title_3_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSingleRule());
	        }
       		set(
       			$current, 
       			"title",
        		lv_title_3_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_4='description' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSingleAccess().getDescriptionKeyword_2_0());
    }
	otherlv_5='=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSingleAccess().getEqualsSignKeyword_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSingleAccess().getDescriptionEStringParserRuleCall_2_2_0()); 
	    }
		lv_description_6_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSingleRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_6_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_7='id' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSingleAccess().getIdKeyword_3_0());
    }
	otherlv_8='=' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getSingleAccess().getEqualsSignKeyword_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSingleAccess().getIdEStringParserRuleCall_3_2_0()); 
	    }
		lv_id_9_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSingleRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_9_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_10='dependsOn' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getSingleAccess().getDependsOnKeyword_4_0());
    }
	otherlv_11='=' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getSingleAccess().getEqualsSignKeyword_4_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSingleRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSingleAccess().getDependsOnAnswerCrossReference_4_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		lv_required_13_0=	'required' 
    {
        newLeafNode(lv_required_13_0, grammarAccess.getSingleAccess().getRequiredRequiredKeyword_5_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSingleRule());
	        }
       		setWithLastConsumed($current, "required", true, "required");
	    }

)
)?(
(
		lv_other_14_0=	'other' 
    {
        newLeafNode(lv_other_14_0, grammarAccess.getSingleAccess().getOtherOtherKeyword_6_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSingleRule());
	        }
       		setWithLastConsumed($current, "other", true, "other");
	    }

)
)?	otherlv_15='>' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getSingleAccess().getGreaterThanSignKeyword_7());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSingleRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSingleAccess().getTemplateOptionCrossReference_8_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSingleAccess().getOptionsOptionParserRuleCall_9_0()); 
	    }
		lv_options_17_0=ruleOption		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSingleRule());
	        }
       		add(
       			$current, 
       			"options",
        		lv_options_17_0, 
        		"Option");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSingleAccess().getOptionsOptionParserRuleCall_10_0()); 
	    }
		lv_options_18_0=ruleOption		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSingleRule());
	        }
       		add(
       			$current, 
       			"options",
        		lv_options_18_0, 
        		"Option");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_19='</single>' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getSingleAccess().getSingleKeyword_11());
    }
)
;





// Entry rule entryRuleMultiple
entryRuleMultiple returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMultipleRule()); }
	 iv_ruleMultiple=ruleMultiple 
	 { $current=$iv_ruleMultiple.current; } 
	 EOF 
;

// Rule Multiple
ruleMultiple returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='<multiple' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMultipleAccess().getMultipleKeyword_0());
    }
(	otherlv_1='title' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMultipleAccess().getTitleKeyword_1_0());
    }
	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMultipleAccess().getEqualsSignKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMultipleAccess().getTitleEStringParserRuleCall_1_2_0()); 
	    }
		lv_title_3_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultipleRule());
	        }
       		set(
       			$current, 
       			"title",
        		lv_title_3_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_4='description' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getMultipleAccess().getDescriptionKeyword_2_0());
    }
	otherlv_5='=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getMultipleAccess().getEqualsSignKeyword_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMultipleAccess().getDescriptionEStringParserRuleCall_2_2_0()); 
	    }
		lv_description_6_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultipleRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_6_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_7='id' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getMultipleAccess().getIdKeyword_3_0());
    }
	otherlv_8='=' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getMultipleAccess().getEqualsSignKeyword_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMultipleAccess().getIdEStringParserRuleCall_3_2_0()); 
	    }
		lv_id_9_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultipleRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_9_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_10='lower' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getMultipleAccess().getLowerKeyword_4_0());
    }
	otherlv_11='=' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getMultipleAccess().getEqualsSignKeyword_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMultipleAccess().getLowerEIntParserRuleCall_4_2_0()); 
	    }
		lv_lower_12_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultipleRule());
	        }
       		set(
       			$current, 
       			"lower",
        		lv_lower_12_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_13='upper' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getMultipleAccess().getUpperKeyword_5_0());
    }
	otherlv_14='=' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getMultipleAccess().getEqualsSignKeyword_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMultipleAccess().getUpperEIntParserRuleCall_5_2_0()); 
	    }
		lv_upper_15_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultipleRule());
	        }
       		set(
       			$current, 
       			"upper",
        		lv_upper_15_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_16='dependsOn' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getMultipleAccess().getDependsOnKeyword_6_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMultipleRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getMultipleAccess().getDependsOnAnswerCrossReference_6_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		lv_required_18_0=	'required' 
    {
        newLeafNode(lv_required_18_0, grammarAccess.getMultipleAccess().getRequiredRequiredKeyword_7_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMultipleRule());
	        }
       		setWithLastConsumed($current, "required", true, "required");
	    }

)
)?(
(
		lv_other_19_0=	'other' 
    {
        newLeafNode(lv_other_19_0, grammarAccess.getMultipleAccess().getOtherOtherKeyword_8_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMultipleRule());
	        }
       		setWithLastConsumed($current, "other", true, "other");
	    }

)
)?(
(
		lv_showLimits_20_0=	'showLimits' 
    {
        newLeafNode(lv_showLimits_20_0, grammarAccess.getMultipleAccess().getShowLimitsShowLimitsKeyword_9_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMultipleRule());
	        }
       		setWithLastConsumed($current, "showLimits", true, "showLimits");
	    }

)
)?	otherlv_21='>' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getMultipleAccess().getGreaterThanSignKeyword_10());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMultipleRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getMultipleAccess().getTemplateOptionCrossReference_11_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMultipleAccess().getOptionsOptionParserRuleCall_12_0()); 
	    }
		lv_options_23_0=ruleOption		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultipleRule());
	        }
       		add(
       			$current, 
       			"options",
        		lv_options_23_0, 
        		"Option");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_24=',' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getMultipleAccess().getCommaKeyword_13_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMultipleAccess().getOptionsOptionParserRuleCall_13_1_0()); 
	    }
		lv_options_25_0=ruleOption		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultipleRule());
	        }
       		add(
       			$current, 
       			"options",
        		lv_options_25_0, 
        		"Option");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_26='}' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getMultipleAccess().getRightCurlyBracketKeyword_14());
    }
	otherlv_27='</multiple>' 
    {
    	newLeafNode(otherlv_27, grammarAccess.getMultipleAccess().getMultipleKeyword_15());
    }
)
;





// Entry rule entryRuleText
entryRuleText returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTextRule()); }
	 iv_ruleText=ruleText 
	 { $current=$iv_ruleText.current; } 
	 EOF 
;

// Rule Text
ruleText returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTextAccess().getTextAction_0(),
            $current);
    }
)	otherlv_1='<text' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTextAccess().getTextKeyword_1());
    }
(	otherlv_2='title' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTextAccess().getTitleKeyword_2_0());
    }
	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTextAccess().getEqualsSignKeyword_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTextAccess().getTitleEStringParserRuleCall_2_2_0()); 
	    }
		lv_title_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTextRule());
	        }
       		set(
       			$current, 
       			"title",
        		lv_title_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_5='description' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTextAccess().getDescriptionKeyword_3_0());
    }
	otherlv_6='=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getTextAccess().getEqualsSignKeyword_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTextAccess().getDescriptionEStringParserRuleCall_3_2_0()); 
	    }
		lv_description_7_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTextRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_7_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_8='id' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getTextAccess().getIdKeyword_4_0());
    }
	otherlv_9='=' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getTextAccess().getEqualsSignKeyword_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTextAccess().getIdEStringParserRuleCall_4_2_0()); 
	    }
		lv_id_10_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTextRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_10_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_11='dependsOn' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getTextAccess().getDependsOnKeyword_5_0());
    }
	otherlv_12='=' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getTextAccess().getEqualsSignKeyword_5_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTextRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getTextAccess().getDependsOnAnswerCrossReference_5_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		lv_required_14_0=	'required' 
    {
        newLeafNode(lv_required_14_0, grammarAccess.getTextAccess().getRequiredRequiredKeyword_6_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTextRule());
	        }
       		setWithLastConsumed($current, "required", true, "required");
	    }

)
)?(
(
		lv_multiline_15_0=	'multiline' 
    {
        newLeafNode(lv_multiline_15_0, grammarAccess.getTextAccess().getMultilineMultilineKeyword_7_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTextRule());
	        }
       		setWithLastConsumed($current, "multiline", true, "multiline");
	    }

)
)?	otherlv_16='/>' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getTextAccess().getSolidusGreaterThanSignKeyword_8());
    }
)
;





// Entry rule entryRuleDate
entryRuleDate returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDateRule()); }
	 iv_ruleDate=ruleDate 
	 { $current=$iv_ruleDate.current; } 
	 EOF 
;

// Rule Date
ruleDate returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDateAccess().getDateAction_0(),
            $current);
    }
)	otherlv_1='<date' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDateAccess().getDateKeyword_1());
    }
(	otherlv_2='title' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDateAccess().getTitleKeyword_2_0());
    }
	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDateAccess().getEqualsSignKeyword_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDateAccess().getTitleEStringParserRuleCall_2_2_0()); 
	    }
		lv_title_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDateRule());
	        }
       		set(
       			$current, 
       			"title",
        		lv_title_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_5='description' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDateAccess().getDescriptionKeyword_3_0());
    }
	otherlv_6='=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDateAccess().getEqualsSignKeyword_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDateAccess().getDescriptionEStringParserRuleCall_3_2_0()); 
	    }
		lv_description_7_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDateRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_7_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_8='id' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getDateAccess().getIdKeyword_4_0());
    }
	otherlv_9='=' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getDateAccess().getEqualsSignKeyword_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDateAccess().getIdEStringParserRuleCall_4_2_0()); 
	    }
		lv_id_10_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDateRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_10_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_11='from' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getDateAccess().getFromKeyword_5_0());
    }
	otherlv_12='=' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getDateAccess().getEqualsSignKeyword_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDateAccess().getFromEStringParserRuleCall_5_2_0()); 
	    }
		lv_from_13_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDateRule());
	        }
       		set(
       			$current, 
       			"from",
        		lv_from_13_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_14='to' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getDateAccess().getToKeyword_6_0());
    }
	otherlv_15='=' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getDateAccess().getEqualsSignKeyword_6_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDateAccess().getToEStringParserRuleCall_6_2_0()); 
	    }
		lv_to_16_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDateRule());
	        }
       		set(
       			$current, 
       			"to",
        		lv_to_16_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_17='dependsOn' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getDateAccess().getDependsOnKeyword_7_0());
    }
	otherlv_18='=' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getDateAccess().getEqualsSignKeyword_7_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDateRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getDateAccess().getDependsOnAnswerCrossReference_7_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		lv_required_20_0=	'required' 
    {
        newLeafNode(lv_required_20_0, grammarAccess.getDateAccess().getRequiredRequiredKeyword_8_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDateRule());
	        }
       		setWithLastConsumed($current, "required", true, "required");
	    }

)
)?(
(
		lv_day_21_0=	'day' 
    {
        newLeafNode(lv_day_21_0, grammarAccess.getDateAccess().getDayDayKeyword_9_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDateRule());
	        }
       		setWithLastConsumed($current, "day", true, "day");
	    }

)
)?(
(
		lv_month_22_0=	'month' 
    {
        newLeafNode(lv_month_22_0, grammarAccess.getDateAccess().getMonthMonthKeyword_10_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDateRule());
	        }
       		setWithLastConsumed($current, "month", true, "month");
	    }

)
)?(
(
		lv_year_23_0=	'year' 
    {
        newLeafNode(lv_year_23_0, grammarAccess.getDateAccess().getYearYearKeyword_11_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDateRule());
	        }
       		setWithLastConsumed($current, "year", true, "year");
	    }

)
)?	otherlv_24='/>' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getDateAccess().getSolidusGreaterThanSignKeyword_12());
    }
)
;





// Entry rule entryRuleNumber
entryRuleNumber returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNumberRule()); }
	 iv_ruleNumber=ruleNumber 
	 { $current=$iv_ruleNumber.current; } 
	 EOF 
;

// Rule Number
ruleNumber returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getNumberAccess().getNumberAction_0(),
            $current);
    }
)	otherlv_1='<number' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getNumberAccess().getNumberKeyword_1());
    }
(	otherlv_2='title' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getNumberAccess().getTitleKeyword_2_0());
    }
	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getNumberAccess().getEqualsSignKeyword_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNumberAccess().getTitleEStringParserRuleCall_2_2_0()); 
	    }
		lv_title_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNumberRule());
	        }
       		set(
       			$current, 
       			"title",
        		lv_title_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_5='description' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getNumberAccess().getDescriptionKeyword_3_0());
    }
	otherlv_6='=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getNumberAccess().getEqualsSignKeyword_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNumberAccess().getDescriptionEStringParserRuleCall_3_2_0()); 
	    }
		lv_description_7_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNumberRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_7_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_8='id' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getNumberAccess().getIdKeyword_4_0());
    }
	otherlv_9='=' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getNumberAccess().getEqualsSignKeyword_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNumberAccess().getIdEStringParserRuleCall_4_2_0()); 
	    }
		lv_id_10_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNumberRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_10_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_11='lower' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getNumberAccess().getLowerKeyword_5_0());
    }
	otherlv_12='=' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getNumberAccess().getEqualsSignKeyword_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNumberAccess().getLowerEIntParserRuleCall_5_2_0()); 
	    }
		lv_lower_13_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNumberRule());
	        }
       		set(
       			$current, 
       			"lower",
        		lv_lower_13_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_14='upper' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getNumberAccess().getUpperKeyword_6_0());
    }
	otherlv_15='=' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getNumberAccess().getEqualsSignKeyword_6_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNumberAccess().getUpperEIntParserRuleCall_6_2_0()); 
	    }
		lv_upper_16_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNumberRule());
	        }
       		set(
       			$current, 
       			"upper",
        		lv_upper_16_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_17='dependsOn' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getNumberAccess().getDependsOnKeyword_7_0());
    }
	otherlv_18='=' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getNumberAccess().getEqualsSignKeyword_7_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getNumberRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getNumberAccess().getDependsOnAnswerCrossReference_7_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		lv_required_20_0=	'required' 
    {
        newLeafNode(lv_required_20_0, grammarAccess.getNumberAccess().getRequiredRequiredKeyword_8_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNumberRule());
	        }
       		setWithLastConsumed($current, "required", true, "required");
	    }

)
)?(
(
		lv_showLimits_21_0=	'showLimits' 
    {
        newLeafNode(lv_showLimits_21_0, grammarAccess.getNumberAccess().getShowLimitsShowLimitsKeyword_9_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNumberRule());
	        }
       		setWithLastConsumed($current, "showLimits", true, "showLimits");
	    }

)
)?	otherlv_22='/>' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getNumberAccess().getSolidusGreaterThanSignKeyword_10());
    }
)
;





// Entry rule entryRuleScale
entryRuleScale returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getScaleRule()); }
	 iv_ruleScale=ruleScale 
	 { $current=$iv_ruleScale.current; } 
	 EOF 
;

// Rule Scale
ruleScale returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='<scale' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getScaleAccess().getScaleKeyword_0());
    }
(	otherlv_1='title' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getScaleAccess().getTitleKeyword_1_0());
    }
	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getScaleAccess().getEqualsSignKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScaleAccess().getTitleEStringParserRuleCall_1_2_0()); 
	    }
		lv_title_3_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScaleRule());
	        }
       		set(
       			$current, 
       			"title",
        		lv_title_3_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_4='description' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getScaleAccess().getDescriptionKeyword_2_0());
    }
	otherlv_5='=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getScaleAccess().getEqualsSignKeyword_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScaleAccess().getDescriptionEStringParserRuleCall_2_2_0()); 
	    }
		lv_description_6_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScaleRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_6_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_7='id' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getScaleAccess().getIdKeyword_3_0());
    }
	otherlv_8='=' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getScaleAccess().getEqualsSignKeyword_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScaleAccess().getIdEStringParserRuleCall_3_2_0()); 
	    }
		lv_id_9_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScaleRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_9_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_10='lower' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getScaleAccess().getLowerKeyword_4());
    }
	otherlv_11='=' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getScaleAccess().getEqualsSignKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScaleAccess().getLowerEIntParserRuleCall_6_0()); 
	    }
		lv_lower_12_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScaleRule());
	        }
       		set(
       			$current, 
       			"lower",
        		lv_lower_12_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_13='upper' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getScaleAccess().getUpperKeyword_7());
    }
	otherlv_14='=' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getScaleAccess().getEqualsSignKeyword_8());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScaleAccess().getUpperEIntParserRuleCall_9_0()); 
	    }
		lv_upper_15_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScaleRule());
	        }
       		set(
       			$current, 
       			"upper",
        		lv_upper_15_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_16='lowerLabel' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getScaleAccess().getLowerLabelKeyword_10_0());
    }
	otherlv_17='=' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getScaleAccess().getEqualsSignKeyword_10_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScaleAccess().getLowerLabelEStringParserRuleCall_10_2_0()); 
	    }
		lv_lowerLabel_18_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScaleRule());
	        }
       		set(
       			$current, 
       			"lowerLabel",
        		lv_lowerLabel_18_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_19='upperLabel' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getScaleAccess().getUpperLabelKeyword_11_0());
    }
	otherlv_20='=' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getScaleAccess().getEqualsSignKeyword_11_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScaleAccess().getUpperLabelEStringParserRuleCall_11_2_0()); 
	    }
		lv_upperLabel_21_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScaleRule());
	        }
       		set(
       			$current, 
       			"upperLabel",
        		lv_upperLabel_21_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_22='dependsOn' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getScaleAccess().getDependsOnKeyword_12_0());
    }
	otherlv_23='=' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getScaleAccess().getEqualsSignKeyword_12_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getScaleRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getScaleAccess().getDependsOnAnswerCrossReference_12_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		lv_required_25_0=	'required' 
    {
        newLeafNode(lv_required_25_0, grammarAccess.getScaleAccess().getRequiredRequiredKeyword_13_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScaleRule());
	        }
       		setWithLastConsumed($current, "required", true, "required");
	    }

)
)?	otherlv_26='/>' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getScaleAccess().getSolidusGreaterThanSignKeyword_14());
    }
)
;





// Entry rule entryRuleTable
entryRuleTable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTableRule()); }
	 iv_ruleTable=ruleTable 
	 { $current=$iv_ruleTable.current; } 
	 EOF 
;

// Rule Table
ruleTable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='<table' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTableAccess().getTableKeyword_0());
    }
(	otherlv_1='title' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTableAccess().getTitleKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTableAccess().getTitleEStringParserRuleCall_1_1_0()); 
	    }
		lv_title_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTableRule());
	        }
       		set(
       			$current, 
       			"title",
        		lv_title_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_3='description' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTableAccess().getDescriptionKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTableAccess().getDescriptionEStringParserRuleCall_2_1_0()); 
	    }
		lv_description_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTableRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_5='id' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTableAccess().getIdKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTableAccess().getIdEStringParserRuleCall_3_1_0()); 
	    }
		lv_id_6_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTableRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_6_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_7='dependsOn' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getTableAccess().getDependsOnKeyword_4_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTableRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getTableAccess().getDependsOnAnswerCrossReference_4_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		lv_required_9_0=	'required' 
    {
        newLeafNode(lv_required_9_0, grammarAccess.getTableAccess().getRequiredRequiredKeyword_5_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTableRule());
	        }
       		setWithLastConsumed($current, "required", true, "required");
	    }

)
)?(
(
		lv_other_10_0=	'other' 
    {
        newLeafNode(lv_other_10_0, grammarAccess.getTableAccess().getOtherOtherKeyword_6_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTableRule());
	        }
       		setWithLastConsumed($current, "other", true, "other");
	    }

)
)(
(
		lv_multiple_11_0=	'multiple' 
    {
        newLeafNode(lv_multiple_11_0, grammarAccess.getTableAccess().getMultipleMultipleKeyword_7_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTableRule());
	        }
       		setWithLastConsumed($current, "multiple", true, "multiple");
	    }

)
)?	otherlv_12='>' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getTableAccess().getGreaterThanSignKeyword_8());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTableRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getTableAccess().getTemplateOptionCrossReference_9_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getTableAccess().getOptionsOptionParserRuleCall_10_0()); 
	    }
		lv_options_14_0=ruleOption		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTableRule());
	        }
       		add(
       			$current, 
       			"options",
        		lv_options_14_0, 
        		"Option");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTableAccess().getOptionsOptionParserRuleCall_11_0()); 
	    }
		lv_options_15_0=ruleOption		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTableRule());
	        }
       		add(
       			$current, 
       			"options",
        		lv_options_15_0, 
        		"Option");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getTableAccess().getQuestionsTableQuestionParserRuleCall_12_0()); 
	    }
		lv_questions_16_0=ruleTableQuestion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTableRule());
	        }
       		add(
       			$current, 
       			"questions",
        		lv_questions_16_0, 
        		"TableQuestion");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTableAccess().getQuestionsTableQuestionParserRuleCall_13_0()); 
	    }
		lv_questions_17_0=ruleTableQuestion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTableRule());
	        }
       		add(
       			$current, 
       			"questions",
        		lv_questions_17_0, 
        		"TableQuestion");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getTableAccess().getTableOptionsOptionParserRuleCall_14_0()); 
	    }
		lv_tableOptions_18_0=ruleOption		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTableRule());
	        }
       		add(
       			$current, 
       			"tableOptions",
        		lv_tableOptions_18_0, 
        		"Option");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTableAccess().getTableOptionsOptionParserRuleCall_15_0()); 
	    }
		lv_tableOptions_19_0=ruleOption		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTableRule());
	        }
       		add(
       			$current, 
       			"tableOptions",
        		lv_tableOptions_19_0, 
        		"Option");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_20='</table>' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getTableAccess().getTableKeyword_16());
    }
)
;





// Entry rule entryRuleOption_Impl
entryRuleOption_Impl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOption_ImplRule()); }
	 iv_ruleOption_Impl=ruleOption_Impl 
	 { $current=$iv_ruleOption_Impl.current; } 
	 EOF 
;

// Rule Option_Impl
ruleOption_Impl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getOption_ImplAccess().getOptionAction_0(),
            $current);
    }
)	otherlv_1='Option' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOption_ImplAccess().getOptionKeyword_1());
    }
)
;





// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEIntRule()); } 
	 iv_ruleEInt=ruleEInt 
	 { $current=$iv_ruleEInt.current.getText(); }  
	 EOF 
;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); 
    }
)?    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleTableQuestion
entryRuleTableQuestion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTableQuestionRule()); }
	 iv_ruleTableQuestion=ruleTableQuestion 
	 { $current=$iv_ruleTableQuestion.current; } 
	 EOF 
;

// Rule TableQuestion
ruleTableQuestion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='TableQuestion' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTableQuestionAccess().getTableQuestionKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTableQuestionAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='title' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTableQuestionAccess().getTitleKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTableQuestionAccess().getTitleEStringParserRuleCall_3_0()); 
	    }
		lv_title_3_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTableQuestionRule());
	        }
       		set(
       			$current, 
       			"title",
        		lv_title_3_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTableQuestionAccess().getRightCurlyBracketKeyword_4());
    }
)
;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


