// automatically generated by Xtext
// TODO: Edit terminals for our purpose
grammar dk.itu.smdp.survey.Dsl with org.eclipse.xtext.common.Terminals hidden(WS, ML_COMMENT)

import "http://survey/1.0" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Survey returns Survey:
	{Survey}
	('<survey' (('title' '=' title=QuotedString)? & ('description' '=' description=QuotedString)?) '>'
		(items+=Item | templates+=AnswerTemplate)*
	'</survey>')?;

Item returns Item:
	Group | Text | Scale | Date | Number | Single | Multiple | Table;

Question returns Question:
	Text | Scale | Date | Number | Single | Multiple | Table;

Option returns Option:
	AnswerTemplateRef | Answer;

QuotedString returns ecore::EString:
	STRING | QUOTED_ID;

AnswerTemplate returns AnswerTemplate:

	'<template' 'id' '=' name=QUOTED_ID '>'
		(answers+=Answer)+
	'</template>';

Answer returns Answer:
	'<a' ('id' '=' name=QUOTED_ID)? '>'
		// TODO: Do not require quotes
		label=QuotedString
	'</a>';

Group returns Group:
	'<group'
		(('title' '=' title=QuotedString)?
		& ('description' '=' description=QuotedString)?
		& ('dependsOn' '=' dependsOn=[Answer|FQN])?
		& (required?='required')?)
	'>'
		(questions+=Question)+ 
	'</group>';

Text returns Text:
	{Text}
	'<text'
		(('title' '=' title=QuotedString)
		& ('description' '=' description=QuotedString)?
		& ('id' '=' name=QUOTED_ID)?
		& ('dependsOn' '=' dependsOn=[Answer|FQN])?
		& (required?='required')?
		& ('singleline' | 'single' | (multiline?=('multi' | 'multiline')))?)
	'/>';

Scale returns Scale:
	'<scale'
		(('title' '=' title=QuotedString)
		& ('description' '=' description=QuotedString)?
		& ('id' '=' name=QUOTED_ID)?
		& ('lower' '=' lower=EInt)
		& ('upper' '=' upper=EInt)
		// TODO: Force that if one label is set, both should be
		& ('lowerLabel' '=' lowerLabel=QuotedString)?
		& ('upperLabel' '=' upperLabel=QuotedString)?
		& ('dependsOn' '=' dependsOn=[Answer|FQN])?
		& (required?='required')?)
	'/>';

Date returns Date:
	{Date}
	'<date'
		(('title' '=' title=QuotedString)
		& ('description' '=' description=QuotedString)?
		& ('id' '=' name=QUOTED_ID)?
		& ('from' '=' from=QuotedString)?
		& ('to' '=' to=QuotedString)?
		& ('dependsOn' '=' dependsOn=[Answer|FQN])?
		& (showLimits?='showLimits')?
		& (required?='required')?
		& (day?='day')?
		& (month?='month')?
		& (year?='year')?)
	'/>';

Number returns Number:
	{Number}
	'<number'
		(('title' '=' title=QuotedString)
		& ('description' '=' description=QuotedString)?
		& ('id' '=' name=QUOTED_ID)?
		& ('lower' '=' lower=EInt)?
		& ('upper' '=' upper=EInt)?
		& ('dependsOn' '=' dependsOn=[Answer|FQN])?
		& (required?='required')?
		& (showLimits?='showLimits')?)
	'/>';

Single returns Single:
	'<single'
		(('title' '=' title=QuotedString)
		& ('description' '=' description=QuotedString)?
		& ('id' '=' name=QUOTED_ID)?
		& ('dependsOn' '=' dependsOn=[Answer|FQN])?
		& (required?='required')?
		& (other?='other')?)
	'>'
		(options+=Option)+
	'</single>';

Multiple returns Multiple:
	'<multiple'
		(('title' '=' title=QuotedString)
		& ('description' '=' description=QuotedString)?
		& ('id' '=' name=QUOTED_ID)?
		& ('lower' '=' lower=INT)?
		& ('upper' '=' upper=INT)?
		& ('dependsOn' dependsOn=[Answer|FQN])?
		& (required?='required')?
		& (other?='other')?
		& (showLimits?='showLimits')?)
	'>'	
		(options+=Option)+ 
	'</multiple>';

Table returns Table:
	'<table'
		(('title' '=' title=QuotedString)?
		& ('description' '=' description=QuotedString)?
		& ('id' '=' name=QUOTED_ID)?
		& ('dependsOn' '=' dependsOn=[Answer|FQN])?
		& (required?='required')?
		& (other?='other')?		
		& (multiple?='multiple')?)
	'>'	
		// TODO: check if mixed order is allowed
		((options+=Option)+ & (questions+=TableQuestion)+)
		((options+=Option) | (questions+=TableQuestion))* 
	'</table>';

EInt returns ecore::EInt:
	'-'? INT;

AnswerTemplateRef returns AnswerTemplateRef:
	'<template' 'id' '=' template=[AnswerTemplate|QUOTED_ID] '/>';

TableQuestion returns TableQuestion:
	'<q>'
		// TODO: Do not require quotes
		title=QuotedString
	'</q>';


// Custom terminals

terminal QUOTED_ID:
	'"' ID '"' |
	"'" ID "'";

terminal FQN:
	'"' ID ('.' ID)* '"' |
	"'" ID ('.' ID)* "'";

terminal ID:
	(('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*);
	
terminal INT returns ecore::EInt:
	('0'..'9')+;
	
terminal STRING	: 
	'"' ( '\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\') | !('\\'|'"') )* '"' |
	"'" ( '\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\') | !('\\'|"'") )* "'";
	
terminal ML_COMMENT:
	'<!--' -> '-->';

terminal SL_COMMENT:
	'//' !('\n'|'\r')* ('\r'? '\n')?;
	
terminal WS:
	(' '|'\t'|'\r'|'\n')+;
