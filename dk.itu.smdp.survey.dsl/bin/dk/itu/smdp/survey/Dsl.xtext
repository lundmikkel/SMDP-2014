// automatically generated by Xtext
grammar dk.itu.smdp.survey.Dsl with org.eclipse.xtext.common.Terminals hidden(WS, ML_COMMENT)

import "http://survey/1.0" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Survey returns Survey:
	{Survey}
	('<survey'
		( ('title="' title=EString? '"')?
		& ('description="' description=EString? '"')?
		& ('filename="' name=ID? '"')? )
	'>'
		(items+=Item | templates+=AnswerTemplate)*
	'</survey>')?;
	
EString returns ecore::EString:
	STRING | ID;

Item returns Item:
	Group | Question;

Question returns Question:
	Text | Scale | Date | Number | Single | Multiple | Table;

Option returns Option:
	AnswerTemplateRef | Answer;

AnswerTemplate returns AnswerTemplate:
	'<template' 'id="' name=ID '"' '>'
		(answers+=Answer)+
	'</template>';

Answer returns Answer:
	'<a' ('id="' name=ID? '"')? '>'
		label=EString
	'</a>';

Group returns Group:
	'<group'
		( ('title="' title=EString? '"')?
		& ('id="' name=EString? '"')?
		& ('description="' description=EString? '"')?
		& ('depends-on="' dependsOn=DEP_ID? '"')?
		& (required?='required')?)
	'>'
		(questions+=Question)+ 
	'</group>';

Text returns Text:
	{Text}
	'<text'
		( ('title="' title=EString '"')
		& ('description="' description=EString? '"')?
		& ('id="' name=ID? '"')?
		& ('depends-on="' dependsOn=DEP_ID? '"')?
		& (required?='required')?
		& ('singleline' | 'single' | (multiline?=('multi' | 'multiline')))?)
	'/>';

Scale returns Scale:
	'<scale'
		( ('title="' title=EString '"')
		& ('description="' description=EString? '"')?
		& ('id="' name=ID '"')?
		& ('min="' min=EInt '"')
		& ('max="' max=EInt '"')
		& ('min-label="' minLabel=EString? '"')?
		& ('max-label="' maxLabel=EString? '"')?
		& ('depends-on="' dependsOn=DEP_ID? '"')?
		& (required?='required')?)
	'/>';

Date returns Date:
	{Date}
	'<date'
		( ('title="' title=EString '"')
		& ('description="' description=EString? '"')?
		& ('id="' name=ID? '"')?
		& ('from="' from=EString? '"')?
		& ('to="' to=EString? '"')?
		& ('depends-on="' dependsOn=DEP_ID? '"')?
		& (showLimits?=('show-limits' | 'show' | 'limits'))?
		& (required?='required')?
		& (day?='day')?
		& (month?='month')?
		& (year?='year')?)
	'/>';

Number returns Number:
	{Number}
	'<number'
		( ('title="' title=EString '"')
		& ('description="' description=EString? '"')?
		& ('id="' name=ID? '"')?
		& ('min="' min=EInt '"')?
		& ('max="' max=EInt '"')?
		& ('depends-on="' dependsOn=DEP_ID? '"')?
		& (required?=('required'))?
		& (showLimits?=('show-limits' | 'show' | 'limits'))?)
	'/>';

Single returns Single:
	'<single'
		( ('title="' title=EString '"')
		& ('description="' description=EString? '"')?
		& ('id="' name=ID? '"')?
		& ('depends-on="' dependsOn=DEP_ID? '"')?
		& (required?='required')?
		& (other?='other')?)
	'>'
		(options+=Option)+
	'</single>';

Multiple returns Multiple:
	'<multiple'
		( ('title="' title=EString '"')
		& ('description="' description=EString? '"')?
		& ('id="' name=ID? '"')?
		& ('min="' min=INT '"')?
		& ('max="' max=INT '"')?
		& ('depends-on="' dependsOn=DEP_ID? '"')?
		& (required?='required')?
		& (other?='other')?
		& (showLimits?=('show-limits' | 'show' | 'limits'))?)
	'>'	
		(options+=Option)+ 
	'</multiple>';

Table returns Table:
	'<table'
		( ('title="' title=EString? '"')?
		& ('description="' description=EString? '"')?
		& ('id="' name=ID? '"')?
		& ('depends-on="' dependsOn=DEP_ID? '"')?
		& (required?='required')?
		& (other?='other')?
		& (multiple?='multiple')?)
	'>'
		((options+=Option)+ & (questions+=TableQuestion)+)
		((options+=Option) | (questions+=TableQuestion))* 
	'</table>';

EInt returns ecore::EInt:
	'-'? INT;

AnswerTemplateRef returns AnswerTemplateRef:
	'<template' 'ref="' template=[AnswerTemplate|ID] '"' '/>';

TableQuestion returns TableQuestion:
	'<q>'
		title=EString
	'</q>';

DEP_ID returns ecore::EString:
	ID | FQN;


// Custom terminals

terminal STRING:
	// TODO: Remove $
	//'"' ( '\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\') | !('\\'|'"') )* '"' |
	"$" ( '\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\') | !('\\'|"$") )* "$";

terminal FQN:
	 (ID '.')? ID '.' ID;

terminal ID:
	('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	
terminal ML_COMMENT:
	'<!--' -> '-->';
